'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _spotlightJsonLogger=require('spotlight-json-logger');var _spotlightJsonLogger2=_interopRequireDefault(_spotlightJsonLogger);var _lsMonitorClient=require('ls-monitor-client');var _lsMonitorClient2=_interopRequireDefault(_lsMonitorClient);var _fsExtra=require('fs-extra');var _fsExtra2=_interopRequireDefault(_fsExtra);var _raven=require('raven');var _raven2=_interopRequireDefault(_raven);var _singleFile=require('./handlers/singleFile');var _singleFile2=_interopRequireDefault(_singleFile);var _group=require('./handlers/group');var _group2=_interopRequireDefault(_group);var _emitToNextPlugin=require('./emitToNextPlugin');var _emitToNextPlugin2=_interopRequireDefault(_emitToNextPlugin);var _findIndexOfPlugin=require('./findIndexOfPlugin');var _findIndexOfPlugin2=_interopRequireDefault(_findIndexOfPlugin);var _parseMessage=require('./parseMessage');var _parseMessage2=_interopRequireDefault(_parseMessage);var _getMinioURL=require('./minio/getMinioURL');var _getMinioURL2=_interopRequireDefault(_getMinioURL);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}const lsMonitorClient=new _lsMonitorClient2.default({baseUri:process.env.MONITOR_URL});exports.default=async function safelyHandleMessage(cChannel,pChannel,pluginName,msg){let message=null;try{message=(0,_parseMessage2.default)(msg);}catch(e){_spotlightJsonLogger2.default.error('Unable to parse message!');console.error(e);_raven2.default.captureException(e);return cChannel.reject(msg,false);}const{nmo}=message;if(!nmo){_spotlightJsonLogger2.default.error('RabbitMQ received a message with no NMO');_raven2.default.captureMessage('RabbitMQ received a message with no NMO');return cChannel.reject(msg,false);}const jobID=nmo.job.job_id;const taskID=nmo.task.task_id;const workflow=nmo.job.workflow;const isGroup=nmo.source.misc&&nmo.source.misc.isGroup;const currentPluginIndex=(0,_findIndexOfPlugin2.default)(workflow,pluginName);if(workflow[currentPluginIndex].env){Object.keys(workflow[currentPluginIndex].env).forEach(k=>{process.env[k]=workflow[currentPluginIndex].env[k];});}let output;let rejectMessage=false;const monitorPayload={p:pluginName,t:Math.round(new Date().getTime())};if(!isGroup){const jsonld=message.jsonld;let url;try{url=await(0,_getMinioURL2.default)(nmo);}catch(e){if(e.code!=='NotFound'){_spotlightJsonLogger2.default.error(`Error with Minio for ${taskID}... nacking`);console.error(e);return cChannel.nack(msg);}}try{output=await(0,_singleFile2.default)(nmo,jsonld,url);}catch(e){if(e.code!==3767){_spotlightJsonLogger2.default.error(`Error with handler for ${pluginName}`);console.error(e);output={nmo,jsonld};monitorPayload.e=e.message;}else{rejectMessage=true;}}}else{try{const addToMisc=await(0,_group2.default)(nmo);if(addToMisc){nmo.source.misc=Object.assign(nmo.source.misc,addToMisc);}}catch(e){if(e.code!==3767){_spotlightJsonLogger2.default.error(`Error with group handler for ${pluginName}`);console.error(e);monitorPayload.e=e.message;}else{rejectMessage=true;}}output={nmo};try{await _fsExtra2.default.remove('/caches/jsonlds');await _fsExtra2.default.remove('/caches/cache.tar.gz');}catch(e){_spotlightJsonLogger2.default.error('Error removing caches, continuing anyway...');console.error(e);_raven2.default.captureException(e);}}nmo.job.workflow[currentPluginIndex].completed=true;try{await lsMonitorClient.setTaskStatus(jobID,taskID,monitorPayload);}catch(e){_spotlightJsonLogger2.default.error('Error sending status to Lightstream Monitor.');console.error(e);_raven2.default.captureException(e);}if(rejectMessage)return cChannel.reject(msg,false);const nextPluginIndex=currentPluginIndex+1;if(!workflow[nextPluginIndex])return cChannel.ack(msg);const nextPlugin=workflow[nextPluginIndex].config.name;try{await(0,_emitToNextPlugin2.default)(pChannel,nextPlugin,output);return cChannel.ack(msg);}catch(e){_spotlightJsonLogger2.default.error('Error sending to next plugin.');_raven2.default.captureException(e);if(process.env.DEBUG)console.error(e);return cChannel.nack(msg);}};